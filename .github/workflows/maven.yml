name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [service-utilisateur, service-notes, service-compte, service-gestion-password]  # Liste des microservices à analyser

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven  # Active la mise en cache des dépendances Maven pour améliorer le temps d'exécution

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package --file ${{ matrix.service }}/pom.xml

      - name: Run Unit Tests
        run: mvn -B test --file ${{ matrix.service }}/pom.xml  # Exécute les tests unitaires pour chaque microservice

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Jeton SonarQube stocké dans les secrets du dépôt
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  # URL du serveur SonarQube stockée dans les secrets du dépôt
        run: |
          mvn -f ${{ matrix.service }}/pom.xml sonar:sonar \
            -Dsonar.projectKey=my-backend-${{ matrix.service }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml  # Ajoute le chemin vers le rapport de couverture Jacoco

      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6  # Optionnel : Télécharge le graphe complet des dépendances sur GitHub

      - name: Upload Jacoco report to GitHub
        if: success()  # Charge le rapport Jacoco uniquement si la construction a réussi
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report-${{ matrix.service }}
          path: ${{ matrix.service }}/target/site/jacoco/jacoco.xml
